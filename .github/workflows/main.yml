# This workflow uses the definitive, lightweight, source-code-only deployment method
name: CI/CD for Product Generator

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy_to_space:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Deploy to Hugging Face Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_SPACE_ID: ${{ secrets.HF_SPACE_ID }} # In the format: YourUsername/YourSpaceName
        run: |
          # Configure git for the action
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          
          # Clone the Hugging Face Space repository into a new directory
          git clone https://user:${HF_TOKEN}@huggingface.co/spaces/${HF_SPACE_ID} hf-space
          
          # Navigate into the Space repo
          cd hf-space

          # --- DEFINITIVE CLEANUP STEP ---
          # Remove all existing files from the repo to ensure a clean slate.
          git rm -rf .
          
          # Copy only the necessary backend files from the correct path into the root
          rsync -av --delete \
            --exclude='models/' \
            --exclude='venv/' \
            --exclude='.venv/' \
            --exclude='__pycache__/' \
            --exclude='.dvc/' \
            ../backend/ ./
          
          # Ensure the README has the correct metadata
          cat > README.md << 'EOF'
---
title: Product Description Generator
emoji: âœ¨
colorFrom: purple
colorTo: pink
sdk: docker
app_port: 8000
pinned: false
---
EOF
          
          # Add all files to be committed
          git add .
          
          # Create a new commit unconditionally
          git commit -m "Deploy from GitHub Actions: ${{ github.sha }}"
          
          # Force push the clean state to overwrite the remote
          git push --force https://user:${HF_TOKEN}@huggingface.co/spaces/${HF_SPACE_ID} main

